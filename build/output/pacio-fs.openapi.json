{
  "openapi": "3.0.2",
  "info": {
    "title": "PACIO Functional Status Capability Statement",
    "description": "This Capability Statement defines the expected capabilities of a PACIO Functional Status FHIR server conforming to the PACIO functional Status Implementation Guide.",
    "license": {
      "name": "Creative Commons Zero v1.0 Universal",
      "url": "http://spdx.org/licenses/CC0-1.0.html"
    },
    "version": "0.1.0",
    "contact": {
      "name": "HL7 Patient Care Work Group",
      "email": "patientcare@lists.HL7.org",
      "url": "http://www.hl7.org/Special/committees/patientcare"
    }
  },
  "externalDocs": {
    "url": "/CapabilityStatement-pacio-fs.html",
    "description": "FHIR CapabilityStatement"
  },
  "paths": {
    "/metadata": {
      "summary": "Access to the Server\u0027s Capability Statement",
      "description": "All FHIR Servers return a CapabilityStatement that describes what services they perform",
      "get": {
        "summary": "Return the server\u0027s capability statement",
        "operationId": "metadata",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the capbility statement",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/CapabilityStatement"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/CapabilityStatement.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          }
        ]
      }
    },
    "/Observation": {
      "summary": "manage the collection of resources of type Observation",
      "description": "Access to services to manage the collection of all resources of type Observation",
      "get": {
        "summary": "Search all resources of type Observation based on a set of criteria",
        "operationId": "searchObservation",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resource being returned",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/Bundle.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "combo-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] or Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code-value-quantity",
            "in": "query",
            "description": "Code and quantity value parameter pair, including in components",
            "schema": {}
          },
          {
            "name": "subject",
            "in": "query",
            "description": "The subject that the observation is about",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-concept",
            "in": "query",
            "description": "The value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-date",
            "in": "query",
            "description": "The value of the observation, if the value is a date or period of time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "code-value-string",
            "in": "query",
            "description": "Code and string value parameter pair",
            "schema": {}
          },
          {
            "name": "component-code-value-quantity",
            "in": "query",
            "description": "Component code and component quantity value parameter pair",
            "schema": {}
          },
          {
            "name": "based-on",
            "in": "query",
            "description": "Reference to the test or procedure request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related",
            "in": "query",
            "description": "Related Observations - search on related-type and related-target together",
            "schema": {}
          },
          {
            "name": "code-value-date",
            "in": "query",
            "description": "Code and date/time value parameter pair",
            "schema": {}
          },
          {
            "name": "patient",
            "in": "query",
            "description": "The subject that the observation is about (if patient)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "specimen",
            "in": "query",
            "description": "Specimen used for this observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code",
            "in": "query",
            "description": "The component code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-quantity",
            "in": "query",
            "description": "Code and quantity value parameter pair",
            "schema": {}
          },
          {
            "name": "context",
            "in": "query",
            "description": "Healthcare event  (Episode-of-care or Encounter) related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code-value-concept",
            "in": "query",
            "description": "Code and coded value parameter pair, including in components",
            "schema": {}
          },
          {
            "name": "value-string",
            "in": "query",
            "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "The unique id for a particular observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performer",
            "in": "query",
            "description": "Who performed the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code",
            "in": "query",
            "description": "The code of the observation type or component type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "method",
            "in": "query",
            "description": "The method used for the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-quantity",
            "in": "query",
            "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-value-quantity",
            "in": "query",
            "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-value-quantity",
            "in": "query",
            "description": "The value or component value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encounter",
            "in": "query",
            "description": "Encounter related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-type",
            "in": "query",
            "description": "has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-target",
            "in": "query",
            "description": "Resource that is related to this one",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-concept",
            "in": "query",
            "description": "Code and coded value parameter pair",
            "schema": {}
          },
          {
            "name": "component-code-value-concept",
            "in": "query",
            "description": "Component code and component coded value parameter pair",
            "schema": {}
          },
          {
            "name": "component-value-concept",
            "in": "query",
            "description": "The value of the component observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "The classification of the type of observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device",
            "in": "query",
            "description": "The Device that generated the observation data.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-value-concept",
            "in": "query",
            "description": "The value or component value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "combo-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] or Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code-value-quantity",
            "in": "query",
            "description": "Code and quantity value parameter pair, including in components",
            "schema": {}
          },
          {
            "name": "subject",
            "in": "query",
            "description": "The subject that the observation is about",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-concept",
            "in": "query",
            "description": "The value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-date",
            "in": "query",
            "description": "The value of the observation, if the value is a date or period of time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "code-value-string",
            "in": "query",
            "description": "Code and string value parameter pair",
            "schema": {}
          },
          {
            "name": "component-code-value-quantity",
            "in": "query",
            "description": "Component code and component quantity value parameter pair",
            "schema": {}
          },
          {
            "name": "based-on",
            "in": "query",
            "description": "Reference to the test or procedure request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related",
            "in": "query",
            "description": "Related Observations - search on related-type and related-target together",
            "schema": {}
          },
          {
            "name": "code-value-date",
            "in": "query",
            "description": "Code and date/time value parameter pair",
            "schema": {}
          },
          {
            "name": "patient",
            "in": "query",
            "description": "The subject that the observation is about (if patient)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "specimen",
            "in": "query",
            "description": "Specimen used for this observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code",
            "in": "query",
            "description": "The component code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-quantity",
            "in": "query",
            "description": "Code and quantity value parameter pair",
            "schema": {}
          },
          {
            "name": "context",
            "in": "query",
            "description": "Healthcare event  (Episode-of-care or Encounter) related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code-value-concept",
            "in": "query",
            "description": "Code and coded value parameter pair, including in components",
            "schema": {}
          },
          {
            "name": "value-string",
            "in": "query",
            "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "The unique id for a particular observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performer",
            "in": "query",
            "description": "Who performed the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code",
            "in": "query",
            "description": "The code of the observation type or component type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "method",
            "in": "query",
            "description": "The method used for the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-quantity",
            "in": "query",
            "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-value-quantity",
            "in": "query",
            "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-value-quantity",
            "in": "query",
            "description": "The value or component value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encounter",
            "in": "query",
            "description": "Encounter related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-type",
            "in": "query",
            "description": "has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-target",
            "in": "query",
            "description": "Resource that is related to this one",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-concept",
            "in": "query",
            "description": "Code and coded value parameter pair",
            "schema": {}
          },
          {
            "name": "component-code-value-concept",
            "in": "query",
            "description": "Component code and component coded value parameter pair",
            "schema": {}
          },
          {
            "name": "component-value-concept",
            "in": "query",
            "description": "The value of the component observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "The classification of the type of observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device",
            "in": "query",
            "description": "The Device that generated the observation data.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-value-concept",
            "in": "query",
            "description": "The value or component value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "combo-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] or Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code-value-quantity",
            "in": "query",
            "description": "Code and quantity value parameter pair, including in components",
            "schema": {}
          },
          {
            "name": "subject",
            "in": "query",
            "description": "The subject that the observation is about",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-concept",
            "in": "query",
            "description": "The value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-date",
            "in": "query",
            "description": "The value of the observation, if the value is a date or period of time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "code-value-string",
            "in": "query",
            "description": "Code and string value parameter pair",
            "schema": {}
          },
          {
            "name": "component-code-value-quantity",
            "in": "query",
            "description": "Component code and component quantity value parameter pair",
            "schema": {}
          },
          {
            "name": "based-on",
            "in": "query",
            "description": "Reference to the test or procedure request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related",
            "in": "query",
            "description": "Related Observations - search on related-type and related-target together",
            "schema": {}
          },
          {
            "name": "code-value-date",
            "in": "query",
            "description": "Code and date/time value parameter pair",
            "schema": {}
          },
          {
            "name": "patient",
            "in": "query",
            "description": "The subject that the observation is about (if patient)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "specimen",
            "in": "query",
            "description": "Specimen used for this observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code",
            "in": "query",
            "description": "The component code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-quantity",
            "in": "query",
            "description": "Code and quantity value parameter pair",
            "schema": {}
          },
          {
            "name": "context",
            "in": "query",
            "description": "Healthcare event  (Episode-of-care or Encounter) related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code-value-concept",
            "in": "query",
            "description": "Code and coded value parameter pair, including in components",
            "schema": {}
          },
          {
            "name": "value-string",
            "in": "query",
            "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "The unique id for a particular observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performer",
            "in": "query",
            "description": "Who performed the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code",
            "in": "query",
            "description": "The code of the observation type or component type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "method",
            "in": "query",
            "description": "The method used for the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-quantity",
            "in": "query",
            "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-value-quantity",
            "in": "query",
            "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-value-quantity",
            "in": "query",
            "description": "The value or component value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encounter",
            "in": "query",
            "description": "Encounter related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-type",
            "in": "query",
            "description": "has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-target",
            "in": "query",
            "description": "Resource that is related to this one",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-concept",
            "in": "query",
            "description": "Code and coded value parameter pair",
            "schema": {}
          },
          {
            "name": "component-code-value-concept",
            "in": "query",
            "description": "Component code and component coded value parameter pair",
            "schema": {}
          },
          {
            "name": "component-value-concept",
            "in": "query",
            "description": "The value of the component observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "The classification of the type of observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device",
            "in": "query",
            "description": "The Device that generated the observation data.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-value-concept",
            "in": "query",
            "description": "The value or component value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "combo-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] or Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code-value-quantity",
            "in": "query",
            "description": "Code and quantity value parameter pair, including in components",
            "schema": {}
          },
          {
            "name": "subject",
            "in": "query",
            "description": "The subject that the observation is about",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-concept",
            "in": "query",
            "description": "The value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-date",
            "in": "query",
            "description": "The value of the observation, if the value is a date or period of time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "code-value-string",
            "in": "query",
            "description": "Code and string value parameter pair",
            "schema": {}
          },
          {
            "name": "component-code-value-quantity",
            "in": "query",
            "description": "Component code and component quantity value parameter pair",
            "schema": {}
          },
          {
            "name": "based-on",
            "in": "query",
            "description": "Reference to the test or procedure request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related",
            "in": "query",
            "description": "Related Observations - search on related-type and related-target together",
            "schema": {}
          },
          {
            "name": "code-value-date",
            "in": "query",
            "description": "Code and date/time value parameter pair",
            "schema": {}
          },
          {
            "name": "patient",
            "in": "query",
            "description": "The subject that the observation is about (if patient)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "specimen",
            "in": "query",
            "description": "Specimen used for this observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code",
            "in": "query",
            "description": "The component code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-quantity",
            "in": "query",
            "description": "Code and quantity value parameter pair",
            "schema": {}
          },
          {
            "name": "context",
            "in": "query",
            "description": "Healthcare event  (Episode-of-care or Encounter) related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code-value-concept",
            "in": "query",
            "description": "Code and coded value parameter pair, including in components",
            "schema": {}
          },
          {
            "name": "value-string",
            "in": "query",
            "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "The unique id for a particular observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performer",
            "in": "query",
            "description": "Who performed the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code",
            "in": "query",
            "description": "The code of the observation type or component type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "method",
            "in": "query",
            "description": "The method used for the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-quantity",
            "in": "query",
            "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-value-quantity",
            "in": "query",
            "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-value-quantity",
            "in": "query",
            "description": "The value or component value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encounter",
            "in": "query",
            "description": "Encounter related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-type",
            "in": "query",
            "description": "has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-target",
            "in": "query",
            "description": "Resource that is related to this one",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-concept",
            "in": "query",
            "description": "Code and coded value parameter pair",
            "schema": {}
          },
          {
            "name": "component-code-value-concept",
            "in": "query",
            "description": "Component code and component coded value parameter pair",
            "schema": {}
          },
          {
            "name": "component-value-concept",
            "in": "query",
            "description": "The value of the component observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "The classification of the type of observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device",
            "in": "query",
            "description": "The Device that generated the observation data.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-value-concept",
            "in": "query",
            "description": "The value or component value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "combo-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] or Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code-value-quantity",
            "in": "query",
            "description": "Code and quantity value parameter pair, including in components",
            "schema": {}
          },
          {
            "name": "subject",
            "in": "query",
            "description": "The subject that the observation is about",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.component.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-concept",
            "in": "query",
            "description": "The value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-date",
            "in": "query",
            "description": "The value of the observation, if the value is a date or period of time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "code-value-string",
            "in": "query",
            "description": "Code and string value parameter pair",
            "schema": {}
          },
          {
            "name": "component-code-value-quantity",
            "in": "query",
            "description": "Component code and component quantity value parameter pair",
            "schema": {}
          },
          {
            "name": "based-on",
            "in": "query",
            "description": "Reference to the test or procedure request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related",
            "in": "query",
            "description": "Related Observations - search on related-type and related-target together",
            "schema": {}
          },
          {
            "name": "code-value-date",
            "in": "query",
            "description": "Code and date/time value parameter pair",
            "schema": {}
          },
          {
            "name": "patient",
            "in": "query",
            "description": "The subject that the observation is about (if patient)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "specimen",
            "in": "query",
            "description": "Specimen used for this observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-code",
            "in": "query",
            "description": "The component code of the observation type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-quantity",
            "in": "query",
            "description": "Code and quantity value parameter pair",
            "schema": {}
          },
          {
            "name": "context",
            "in": "query",
            "description": "Healthcare event  (Episode-of-care or Encounter) related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code-value-concept",
            "in": "query",
            "description": "Code and coded value parameter pair, including in components",
            "schema": {}
          },
          {
            "name": "value-string",
            "in": "query",
            "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "The unique id for a particular observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performer",
            "in": "query",
            "description": "Who performed the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-code",
            "in": "query",
            "description": "The code of the observation type or component type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "method",
            "in": "query",
            "description": "The method used for the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value-quantity",
            "in": "query",
            "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "component-value-quantity",
            "in": "query",
            "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data-absent-reason",
            "in": "query",
            "description": "The reason why the expected value in the element Observation.value[x] is missing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-value-quantity",
            "in": "query",
            "description": "The value or component value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encounter",
            "in": "query",
            "description": "Encounter related to the observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-type",
            "in": "query",
            "description": "has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related-target",
            "in": "query",
            "description": "Resource that is related to this one",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code-value-concept",
            "in": "query",
            "description": "Code and coded value parameter pair",
            "schema": {}
          },
          {
            "name": "component-code-value-concept",
            "in": "query",
            "description": "Component code and component coded value parameter pair",
            "schema": {}
          },
          {
            "name": "component-value-concept",
            "in": "query",
            "description": "The value of the component observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "The classification of the type of observation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device",
            "in": "query",
            "description": "The Device that generated the observation data.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combo-value-concept",
            "in": "query",
            "description": "The value or component value of the observation, if the value is a CodeableConcept",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the observation",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/Observation/{rid}": {
      "summary": "Read/Write/etc resource instance of type Observation",
      "description": "Access to services to manage the state of a single resource of type Observation",
      "get": {
        "summary": "Read the current state of the resource",
        "operationId": "readObservation",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resource being returned",
            "headers": {
              "ETag": {
                "description": "Version from Resource.meta.version as a weak ETag",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Observation"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/Observation.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          }
        ]
      }
    },
    "/Observation/{rid}/_history": {
      "summary": "Read past versions of resource instance of type Observation",
      "description": "Access to previous versions of a single resource of type Observation",
      "get": {
        "summary": "Read the past states of the resource",
        "operationId": "histinstObservation",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resources being returned",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/Bundle.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/Observation/{rid}/_history/{hid}": {
      "summary": "Read a past version of resource instance of type Observation",
      "description": "Access a to specified previous version of a single resource of type Observation",
      "get": {
        "summary": "Read a past state of the resource",
        "operationId": "vreadObservation",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resource being returned",
            "headers": {
              "ETag": {
                "description": "Version from Resource.meta.version as a weak ETag for that version",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Observation"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/Observation.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/hid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/hid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/hid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/hid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/hid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          }
        ]
      }
    },
    "/Observation/_history": {
      "summary": "Read past versions of resources of type Observation",
      "description": "Access to previous versions of resourcez of type Observation",
      "get": {
        "summary": "Read the past states of the resource",
        "operationId": "histtypeObservation",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resources being returned",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/Bundle.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/QuestionnaireResponse": {
      "summary": "manage the collection of resources of type QuestionnaireResponse",
      "description": "Access to services to manage the collection of all resources of type QuestionnaireResponse",
      "get": {
        "summary": "Search all resources of type QuestionnaireResponse based on a set of criteria",
        "operationId": "searchQuestionnaireResponse",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resource being returned",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/Bundle.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "name": "authored",
            "in": "query",
            "description": "When the questionnaire response was last changed",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "The unique identifier for the questionnaire response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent",
            "in": "query",
            "description": "Procedure or observation this questionnaire response was performed as a part of",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "questionnaire",
            "in": "query",
            "description": "The questionnaire the answers are provided for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "based-on",
            "in": "query",
            "description": "Plan/proposal/order fulfilled by this questionnaire response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "description": "The subject of the questionnaire response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "author",
            "in": "query",
            "description": "The author of the questionnaire response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "patient",
            "in": "query",
            "description": "The patient that is the subject of the questionnaire response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Encounter or episode associated with the questionnaire response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "The individual providing the information reflected in the questionnaire respose",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the questionnaire response",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/QuestionnaireResponse/{rid}": {
      "summary": "Read/Write/etc resource instance of type QuestionnaireResponse",
      "description": "Access to services to manage the state of a single resource of type QuestionnaireResponse",
      "get": {
        "summary": "Read the current state of the resource",
        "operationId": "readQuestionnaireResponse",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resource being returned",
            "headers": {
              "ETag": {
                "description": "Version from Resource.meta.version as a weak ETag",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/QuestionnaireResponse"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/QuestionnaireResponse.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          }
        ]
      }
    },
    "/QuestionnaireResponse/{rid}/_history": {
      "summary": "Read past versions of resource instance of type QuestionnaireResponse",
      "description": "Access to previous versions of a single resource of type QuestionnaireResponse",
      "get": {
        "summary": "Read the past states of the resource",
        "operationId": "histinstQuestionnaireResponse",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resources being returned",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/Bundle.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/QuestionnaireResponse/{rid}/_history/{hid}": {
      "summary": "Read a past version of resource instance of type QuestionnaireResponse",
      "description": "Access a to specified previous version of a single resource of type QuestionnaireResponse",
      "get": {
        "summary": "Read a past state of the resource",
        "operationId": "vreadQuestionnaireResponse",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resource being returned",
            "headers": {
              "ETag": {
                "description": "Version from Resource.meta.version as a weak ETag for that version",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/QuestionnaireResponse"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/QuestionnaireResponse.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/hid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          }
        ]
      }
    },
    "/QuestionnaireResponse/_history": {
      "summary": "Read past versions of resources of type QuestionnaireResponse",
      "description": "Access to previous versions of resourcez of type QuestionnaireResponse",
      "get": {
        "summary": "Read the past states of the resource",
        "operationId": "histtypeQuestionnaireResponse",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resources being returned",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/Bundle.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/DeviceUseStatement": {
      "summary": "manage the collection of resources of type DeviceUseStatement",
      "description": "Access to services to manage the collection of all resources of type DeviceUseStatement",
      "get": {
        "summary": "Search all resources of type DeviceUseStatement based on a set of criteria",
        "operationId": "searchDeviceUseStatement",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resource being returned",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/Bundle.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "Search by identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "description": "Search by subject",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "patient",
            "in": "query",
            "description": "Search by subject - a patient",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device",
            "in": "query",
            "description": "Search by device",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/DeviceUseStatement/{rid}": {
      "summary": "Read/Write/etc resource instance of type DeviceUseStatement",
      "description": "Access to services to manage the state of a single resource of type DeviceUseStatement",
      "get": {
        "summary": "Read the current state of the resource",
        "operationId": "readDeviceUseStatement",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resource being returned",
            "headers": {
              "ETag": {
                "description": "Version from Resource.meta.version as a weak ETag",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/DeviceUseStatement"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/DeviceUseStatement.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          }
        ]
      }
    },
    "/DeviceUseStatement/{rid}/_history": {
      "summary": "Read past versions of resource instance of type DeviceUseStatement",
      "description": "Access to previous versions of a single resource of type DeviceUseStatement",
      "get": {
        "summary": "Read the past states of the resource",
        "operationId": "histinstDeviceUseStatement",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resources being returned",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/Bundle.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/DeviceUseStatement/{rid}/_history/{hid}": {
      "summary": "Read a past version of resource instance of type DeviceUseStatement",
      "description": "Access a to specified previous version of a single resource of type DeviceUseStatement",
      "get": {
        "summary": "Read a past state of the resource",
        "operationId": "vreadDeviceUseStatement",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resource being returned",
            "headers": {
              "ETag": {
                "description": "Version from Resource.meta.version as a weak ETag for that version",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/DeviceUseStatement"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/DeviceUseStatement.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/rid"
          },
          {
            "$ref": "#/components/parameters/hid"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          }
        ]
      }
    },
    "/DeviceUseStatement/_history": {
      "summary": "Read past versions of resources of type DeviceUseStatement",
      "description": "Access to previous versions of resourcez of type DeviceUseStatement",
      "get": {
        "summary": "Read the past states of the resource",
        "operationId": "histtypeDeviceUseStatement",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resources being returned",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/Bundle.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "_since",
            "in": "query",
            "description": "Only include resource versions that were created at or after the given instant in time",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_at",
            "in": "query",
            "description": "Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_list",
            "in": "query",
            "description": "Only include resource versions that are referenced in the specified list (current list references are allowed)",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/": {
      "summary": "System level operations",
      "description": "System level operations",
      "get": {
        "summary": "Search all resources of all types based on a set of criteria",
        "operationId": "searchAll",
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "the resource being returned",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/Bundle.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "name": "_content",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_lastUpdated",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_security",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_text",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "name": "_content",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_lastUpdated",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_security",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_text",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "name": "_content",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_lastUpdated",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          },
          {
            "name": "_security",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_text",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "summary": "Batch or Transaction",
        "operationId": "transaction",
        "requestBody": {
          "description": "The batch or transaction",
          "required": true,
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Bundle"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "https://hl7.org/fhir/R4/Bundle.xsd"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/OperationOutcome.xsd"
                }
              }
            }
          },
          "200": {
            "description": "Batch or Transaction response",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/fhir.schema.json#/definitions/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "https://hl7.org/fhir/R4/Bundle.xsd"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "rid": {
        "name": "rid",
        "in": "path",
        "description": "id of the resource (\u003dResource.id)",
        "required": true,
        "allowEmptyValue": false,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "hid": {
        "name": "hid",
        "in": "path",
        "description": "id of the history entry (\u003dResource.meta.versionId)",
        "required": true,
        "allowEmptyValue": false,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "summary": {
        "name": "_summary",
        "in": "query",
        "description": "Requests the server to return a designated subset of the resource",
        "allowEmptyValue": true,
        "style": "form",
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "text",
            "data",
            "count",
            "false"
          ]
        }
      },
      "format": {
        "name": "_format",
        "in": "query",
        "description": "Specify alternative response formats by their MIME-types (when a client is unable acccess accept: header)",
        "allowEmptyValue": true,
        "style": "form",
        "schema": {
          "type": "string",
          "format": "mime-type"
        }
      },
      "pretty": {
        "name": "_pretty",
        "in": "query",
        "description": "Ask for a pretty printed response for human convenience",
        "allowEmptyValue": true,
        "style": "form",
        "schema": {
          "type": "boolean"
        }
      },
      "elements": {
        "name": "_elements",
        "in": "query",
        "description": "Requests the server to return a collection of elements from the resource",
        "allowEmptyValue": true,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "format": "string",
          "items": {
            "format": "string"
          }
        }
      },
      "count": {
        "name": "_count",
        "in": "query",
        "description": "The maximum number of search results on a page. The server is not bound to return the number requested, but cannot return more",
        "schema": {
          "type": "number"
        }
      }
    }
  }
}